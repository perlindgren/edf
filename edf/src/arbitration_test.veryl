#[test(arbitration)]
embed (inline) sv{{{

    module test;
        import edf_Types::*;
        // Entry i_int_vec[8]; 
        IntVec i_int_vec; 
        logic o_pend;

        int now;

        edf_Arbitration dut (
            .i_int_vec,
            .o_pend
        );

        task tick (int x);
            # x;
		    now = now + x;
	    endtask

        function void pend(logic [2:0] i, logic signed [8-1:0] dl);
            $display("i ", i);
            i_int_vec[i].abs_dl = now[7:0] + dl;
            i_int_vec[i].pend = 1;

            $display("abs_dl ", i_int_vec[i].abs_dl);
            $display("pend ", i_int_vec[i].pend);
        endfunction

        initial begin
           //  i_pend = '{default: 0}; 
            now = 0;
            
            tick(10);
            pend(0, 10);
            
            tick(20);
            pend(1, 20);

            tick(10);
        end
    endmodule
}}}
