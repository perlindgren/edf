package Cfg {
    const NrVec       : u32  = 8;
    const DeadLineBits: u32  = 8;
    const DeadLine    : type = signed logic<DeadLineBits>;
    const PendVec     : type = logic<NrVec>;

    struct Entry {
        addr  : u32     ,
        rel_dl: DeadLine,
        abs_dl: DeadLine,
        pend  : logic   ,
        enable: logic   ,
    }

    const IntVec        : type = Entry[NrVec - 1:0];
    const IntVecIdxWidth: u32  = $clog2(NrVec);
    const IntVecIdx     : type = logic<IntVecIdxWidth>;

    const RelDeadLines: type = DeadLine[NrVec - 1:0];

    struct TreeItem {
        value: DeadLine ,
        idx  : IntVecIdx,
    }

    const MAX_DEADLINE: DeadLine = {1'0 repeat 1, 1'1 repeat DeadLineBits - 1};
}
